import xlwings as xw
import random
import os

# Danh sách tên, địa chỉ
ho = ["Nguyễn", "Trần", "Lê", "Phạm", "Hoàng", "Phan", "Vũ", "Võ", "Đặng", "Bùi"]
ten_dem = ["Thị", "Văn", "Hồng", "Đức", "Ngọc", "Minh", "Gia", "Trung", "Thanh", "Anh"]
ten = ["An", "Bình", "Chi", "Dũng", "Hà", "Hải", "Hưng", "Khánh", "Lan", "Linh",
       "Mai", "Nam", "Nga", "Phong", "Quân", "Sơn", "Trang", "Tú", "Vy", "Yến"]

addresses = [
    "Hà Nội", "Hồ Chí Minh", "Đà Nẵng", "Hải Phòng", "Cần Thơ", "Nha Trang",
    "Huế", "Vũng Tàu", "Quảng Ninh", "Thanh Hóa", "Bình Dương", "Bắc Ninh",
    "Hải Dương", "Nam Định", "Thái Bình", "Phú Thọ", "Vĩnh Phúc", "Bình Thuận"
]

def generate_vietnamese_name():
    return f"{random.choice(ho)} {random.choice(ten_dem)} {random.choice(ten)}"

def generate_random_address():
    city = random.choice(addresses)
    number = random.randint(1, 200)
    street_num = random.randint(1, 50)
    return f"Số {number}, Đường {street_num}, {city}"

# Đường dẫn lưu
path = r"D:\Code_learn\BTVN\06-13\Xlwings"
os.makedirs(path, exist_ok=True)

# ======== TẠO FILE Report.xlsx ========
wb1 = xw.Book()
ws_ds = wb1.sheets[0]
ws_ds.name = "Danh sách"
ws_dg = wb1.sheets.add("Đánh giá")

# Tiêu đề
ws_ds.range("A1:E1").merge()
ws_ds.range("A1").value = "Danh sách học sinh"
ws_ds.range("A1").font.size = 24
ws_ds.range("A1").font.bold = True
ws_ds.range("A1").api.HorizontalAlignment = -4108

# Header có thêm cột STT
headers = ["STT", "Mã HS", "Tên HS", "Giới tính", "Địa chỉ"]
ws_ds.range("A2:E2").value = headers
ws_ds.range("A2:E2").api.HorizontalAlignment = -4108

# Danh sách học sinh
students = []
for i in range(1, 101):
    if i % 2 == 0:
        gender = ""
    else:
        gender = random.choice(["Nam", "Nữ"])
    address = generate_random_address() if i % 3 != 0 else ""
    students.append([f"HS{i:02}", generate_vietnamese_name(), gender, address])

# Ghi dữ liệu với cột STT
ws_ds.range("A3").value = [[idx] + student for idx, student in enumerate(students, start=1)]

# Bôi đỏ các ô trống
for row in range(3, len(students) + 3):
    for col in ["C", "D", "E"]:
        cell = ws_ds.range(f"{col}{row}")
        if cell.value in (None, ""):
            cell.color = (255, 0, 0)  # Màu đỏ

ws_ds.autofit()
# Lưu file Report.xlsx
report_file = os.path.join(path, "Report.xlsx")
wb1.save(report_file)
wb1.close()

# ======== XỬ LÝ FILE Data.xlsx ========
wb2 = xw.Book()
ws2 = wb2.sheets[0]
ws2.name = "Data"
subjects = ["Toán", "Lý", "Hóa", "Văn", "Sử", "Địa", "Anh", "Tin"]

# Header thêm STT và Tên HS
ws2.range("A1:J1").value = ["STT", "Mã HS", "Tên HS"] + subjects

# Tạo dict mã HS → tên HS
student_name_dict = {student[0]: student[1] for student in students}

# Ghi dữ liệu với điểm ngẫu nhiên
ws2.range("A2").value = [
    [idx, student[0], student[1]] + [random.randint(1, 10) for _ in subjects]
    for idx, student in enumerate(students, start=1)
]

ws2.autofit()

# Lưu file Data.xlsx
data_file = os.path.join(path, "Data.xlsx")
wb2.save(data_file)
wb2.close()

# ======== ĐÁNH GIÁ HỌC SINH ========
wb_report = xw.Book(report_file)
ws_eval = wb_report.sheets["đánh giá"]

# Tiêu đề
ws_eval.range("A1:D1").merge()
ws_eval.range("A1").value = "Đánh giá học sinh"
ws_eval.range("A1").font.size = 24
ws_eval.range("A1").font.bold = True
ws_eval.range("A1").api.HorizontalAlignment = -4108

# Header
ws_eval.range("A2:D2").value = ["STT", "Mã HS", "Tên HS", "Điểm TB"]
ws_eval.range("A2:D2").api.HorizontalAlignment = -4108

# Tính điểm TB từ Data.xlsx
wb_data = xw.Book(data_file)
ws_data = wb_data.sheets["Data"]

score_dict = {
    ws_data.range(f"B{row}").value: round(sum(ws_data.range(f"D{row}:J{row}").value) / len(subjects), 2)
    for row in range(2, len(students) + 2)
}

sorted_scores = sorted(score_dict.items(), key=lambda x: x[1], reverse=True)

# Ghi bảng đánh giá
ws_eval.range("A3:D3" + str(len(sorted_scores) + 2)).value = [
    [idx, ma_hs, student_name_dict.get(ma_hs, ""), diem_tb]
    for idx, (ma_hs, diem_tb) in enumerate(sorted_scores, start=1)
]
ws_eval.autofit()

wb_report.save()
wb_report.close()
wb_data.close()

print("✅ Đã hoàn thành xử lý toàn bộ yêu cầu trong Report.xlsx với xlwings!")
